{"version":3,"sources":["styles/Animation.module.css","components/Circle.js","components/Animation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","onDragStart","e","preventDefault","className","cn","styles","circle","rubber","Animation","containerRef","useRef","animate","useCallback","options","start","performance","now","requestAnimationFrame","time","timeFraction","duration","progress","timing","draw","makeEaseOut","bounce","Math","pow","cos","PI","startAnimation","elem","top","left","radian","hueRad","length","sqrt","style","firstChild","filter","width","abs","transform","mouseEvents","useMemo","shiftX","shiftY","containerSize","move","onMouseDown","event","target","classList","contains","current","cursor","zIndex","clientX","parseInt","clientY","clientHeight","clientWidth","onMouseMove","atan2","onMouseUp","ref","container","Array","from","map","_","i","Circle","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e26c13f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Animation_container__2-22p\",\"circle\":\"Animation_circle__2snRt\",\"rubber\":\"Animation_rubber__3qSng\",\"none\":\"Animation_none__31spC\"};","import React from 'react';\nimport cn from 'classnames';import styles from '../styles/Animation.module.css'\n\nfunction App() {\n    return (\n        <span onDragStart={(e)=>{e.preventDefault()}}\n              className={cn('circle',styles.circle)}>\n            <span className={styles.rubber}/>\n        </span>\n    );\n}\n\nexport default App;\n","import React, {useCallback, useRef, useMemo} from 'react';\nimport styles from '../styles/Animation.module.css';\nimport Circle from './Circle';\nimport cn from 'classnames';\n\n\nfunction Animation() {\n    let containerRef = useRef(null);\n\n    let animate = useCallback((options) => {\n\n        let start = performance.now();\n\n        requestAnimationFrame(function animate(time) {\n            // timeFraction от 0 до 1\n            let timeFraction = (time - start) / options.duration;\n            if (timeFraction > 1) {\n                timeFraction = 1;\n            }\n\n            // текущее состояние анимации\n            let progress = options.timing(timeFraction);\n\n            options.draw(progress);\n\n            if (timeFraction < 1) {\n                requestAnimationFrame(animate);\n            }\n        });\n    }, []);\n\n    let makeEaseOut = useCallback((timing) => (timeFraction) => (\n        1 - timing(1 - timeFraction)\n    ), []);\n\n    let bounce = useCallback(\n        function elastic(timeFraction) {\n            return Math.pow(1.5, 10 * (timeFraction - 1)) *\n                Math.cos((10 - 0.5) * Math.PI * timeFraction + Math.PI / 2)\n        }\n        , []);\n\n    let startAnimation = useCallback((elem, top, left, radian, hueRad) => {\n        if (elem) {\n            const length = Math.sqrt(top ** 2 + left ** 2);\n            let n = 0;\n\n            animate({\n                duration: 2000,\n                timing: makeEaseOut(bounce),\n                draw(progress) {\n                    elem.style.top = (top) * (1 - progress) + 'px';\n                }\n            });\n\n            animate({\n                duration: 2000,\n                timing: makeEaseOut(bounce),\n                draw(progress) {\n                    elem.style.left = left * (1 - progress) + 'px';\n\n                    elem.firstChild.style.filter = `hue-rotate(\n                        ${270 * hueRad * (1 - progress)}deg\n                    )`;\n\n                    elem.firstChild.style.width = Math.abs(length * (1 - progress) + 10) + 'px';\n\n                    if ((1 - progress) > 0) {\n                        elem.firstChild.style.transform = `translate(-5px,-5px)\n                                                           rotate(${radian * 180 / Math.PI - 180}deg) `;\n                    } else {\n                        elem.firstChild.style.transform = `translate(-5px,-5px)\n                                                           rotate(${radian * 180 / Math.PI}deg) `;\n                    }\n                }\n            });\n        }\n    }, []);\n\n    const mouseEvents = useMemo(() => {\n\n        let shiftX, shiftY;\n        let move = false;\n        let elem = null;\n        let containerSize;\n        let hueRad;\n\n        function onMouseDown(event) {\n            if (event.target.classList.contains('circle')) {\n                containerRef.current.style.cursor = 'grabbing';\n\n                elem = event.target;\n                elem.style.zIndex = 100;\n                elem.style.cursor = 'grabbing';\n\n                shiftX = (event.clientX - parseInt(elem.style.left || 0));\n                shiftY = (event.clientY - parseInt(elem.style.top || 0));\n\n                containerSize = Math.sqrt(\n                    containerRef.current.clientHeight ** 2 + containerRef.current.clientWidth ** 2\n                );\n\n                move = true;\n            }\n        }\n\n        function onMouseMove(event) {\n            if (move && elem) {\n                const left = event.clientX - shiftX;\n                const top = event.clientY - shiftY;\n                const length = Math.sqrt(top ** 2 + left ** 2);\n                const radian = Math.atan2(top, left);\n                hueRad = 270 * length / containerSize;\n\n                elem.style.left = left + 'px';\n                elem.style.top = top + 'px';\n                elem.firstChild.style.transform = `translate(-5px, -5px)\n                                                   rotate(${radian * 180 / Math.PI - 180}deg)`;\n                elem.firstChild.style.filter = `hue-rotate(${hueRad}deg)`;\n                elem.firstChild.style.width = Math.sqrt(top ** 2 + left ** 2) + 10 + 'px';\n\n\n            }\n        }\n\n        function onMouseUp(event) {\n            if (elem) {\n                const left = event.clientX - shiftX;\n                const top = event.clientY - shiftY;\n                const radian = Math.atan2(top, left);\n\n                containerRef.current.style.cursor = 'default';\n                elem.style.cursor = 'pointer';\n                elem.style.zIndex = '';\n                startAnimation(elem, parseInt(elem.style.top), parseInt(elem.style.left), radian, hueRad);\n\n                elem = null;\n                move = false;\n            }\n        }\n\n        return {\n            onMouseDown,\n            onMouseMove,\n            onMouseUp\n        }\n    }, []);\n\n    return (\n        <div ref={containerRef}\n             onMouseDown={mouseEvents.onMouseDown}\n             onMouseMove={mouseEvents.onMouseMove}\n             onMouseUp={mouseEvents.onMouseUp}\n             className={cn('droppable', styles.container)}>\n            {Array.from({length: 5}).map((_, i) => <Circle key={i}/>)}\n        </div>\n    );\n}\n\nexport default Animation;\n","import React from 'react';\nimport Animation from './components/Animation';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Animation/>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}