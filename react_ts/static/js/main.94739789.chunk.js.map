{"version":3,"sources":["components/CSSProperties/Drop/Drops.module.css","components/CSSProperties/Filter/Filter.module.css","components/Aside/Aside.module.css","components/CSSProperties/Border/Border.module.css","components/CSSProperties/Background/Background.module.css","components/Slider/Slider.module.css","context/main/mainContext.tsx","components/Navbar.tsx","context/todo/todoContext.tsx","components/Todo/TodoForm.tsx","components/Todo/TodoList.tsx","components/TextForm.tsx","context/main/mainReducer.tsx","context/types.tsx","context/main/MainState.tsx","components/Aside/Aside.tsx","components/Slider/Slider.tsx","components/CSSProperties/Border/Border.tsx","components/CSSProperties/Drop/Drop.tsx","components/CSSProperties/Drop/ Drops.tsx","context/background/backContext.tsx","components/CSSProperties/Background/Background.tsx","context/background/backReducer.tsx","context/background/BackState.tsx","context/filter/filterContext.tsx","components/CSSProperties/Filter/Filter.tsx","context/filter/filterReducer.tsx","context/filter/FilterState.tsx","pages/CSS.tsx","context/todo/todoReducer.tsx","context/todo/TodoState.tsx","App.tsx","functions/places.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","MainContext","createContext","Navbar","props","useContext","state","setLocation","onClick","useCallback","event","target","textContent","str","location","toLowerCase","className","href","id","indexOf","to","TodoContext","TodoForm","useState","task","setTask","addTask","type","value","onChange","onKeyDown","key","htmlFor","TodoList","deleteTask","del","currentTarget","classList","contains","closest","dataset","TransitionGroup","component","todoList","map","item","index","CSSTransition","timeout","enter","exit","classNames","unmountOnExit","mountOnEnter","data-id","style","TextForm","setStr","startSolve","handlers","action","width","borderStyle","radius","mainReducer","DEFAULT","MainState","children","useReducer","window","pathname","dispatch","setWidth","setBorderStyle","setRadius","Provider","properties","text","icon","Aside","in","show","cn","styles","main","list","elem","choose","Slider","slider","useRef","tumb","onMouseDown","containerWidth","current","getBoundingClientRect","left","onMouseMove","newleft","pageX","setValue","document","addEventListener","onMouseUp","removeEventListener","onDragStart","preventDefault","ref","Border","Math","ceil","borderMain","buttons","i","j","button","Drop","randomNumbers","useMemo","random","drop","Drops","dropContainer","dropNav","bottom","Array","from","length","_","BackContext","blendModeArr","Background","setBackgroundSize","setBackgroundBlandMode","backgroundSize","back","backgroundBlendMode","backReducer","BackState","FilterContext","filtersArr","filtersMeasure","unset","blur","brightness","contrast","grayscale","invert","opacity","saturate","sepia","Filter","setFilterValue","setFilter","sliderContainer","filter","filterValue","filterReducer","FilterState","CSS","path","exact","todoReducer","TodoState","App","res","setRes","trim","split","reverse","join","places","xmlns","version","stdDeviation","result","mode","values","in2","operator","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94739789.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropContainer\":\"Drops_dropContainer__JhwrP\",\"drop\":\"Drops_drop__3mFU_\",\"animate\":\"Drops_animate__28bX4\",\"dropNav\":\"Drops_dropNav__1prx7\",\"bottom\":\"Drops_bottom__1bHHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Filter_main__1sHS-\",\"filter\":\"Filter_filter__1ARYu\",\"sliderContainer\":\"Filter_sliderContainer__3Ljhp\",\"button\":\"Filter_button__1ev9G\",\"buttons\":\"Filter_buttons__3QHYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Aside_main__1r5Gn\",\"list\":\"Aside_list__juq-_\",\"elem\":\"Aside_elem__2ObhV\",\"choose\":\"Aside_choose__2A39q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Border_container__3PC3r\",\"main\":\"Border_main__1OEqX\",\"borderMain\":\"Border_borderMain__3ulNJ\",\"solid\":\"Border_solid__3vRnJ\",\"inset\":\"Border_inset__33RKw\",\"button\":\"Border_button__mZPHt\",\"buttons\":\"Border_buttons__29MlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Background_main__1IyjS\",\"back\":\"Background_back__vhee0\",\"button\":\"Background_button__3bUXJ\",\"buttons\":\"Background_buttons__3a8MQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__2vNNX\",\"value\":\"Slider_value__23doS\",\"tumb\":\"Slider_tumb__2SAI3\"};","import {createContext} from \"react\";\n\nexport const MainContext: any = createContext({});\n","import React, {useCallback, useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {MainContext} from \"../context/main/mainContext\";\n\nconst Navbar: React.FunctionComponent = (props) => {\n    let {state, setLocation} = useContext(MainContext);\n\n    const onClick: React.EventHandler<any> = useCallback((event) => {\n        setLocation('/' + event.target.textContent);\n    }, [])\n    const str = state.location.toLowerCase();\n\n    return <nav className='navigateTop'>\n        <div className=\"nav-wrapper px1 purple darken-2\">\n            <a href=\"#\" className=\"brand-logo\">React+TypeScript</a>\n            <ul onClick={onClick} id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                <li className={(str.indexOf('css') > 0) ? 'choose link' : 'link'}>\n                    <Link to=\"/CSS\">CSS</Link>\n                </li>\n                <li className={(str.indexOf('components') > 0 || str === '' || str === '/') ? 'choose link' : 'link'}>\n                    <Link to=\"/Components\">Components</Link>\n                </li>\n                <li className={(str.indexOf('javascript') > 0) ? 'choose link' : 'link'}>\n                    <Link to=\"/JavaScript\">JavaScript</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>\n}\nexport default Navbar;\n","import {createContext} from \"react\";\n\nexport const TodoContext: any = createContext({});\n","import React, {useContext, useState} from \"react\";\nimport {TodoContext} from \"../../context/todo/todoContext\";\n\nexport const TodoForm: React.FC = () => {\n    const [task, setTask] = useState<string>('');\n    const {addTask} = useContext(TodoContext);\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTask(event.target.value);\n    }\n\n    const onKeyDown = (event: React.KeyboardEvent): void => {\n        if (event.key === 'Enter' && task !== '') {\n            addTask(task);\n            setTask('');\n        }\n    }\n\n    return <div className='input-field'>\n        <input id='title' type='text' value={task} onChange={onChange} onKeyDown={onKeyDown}/>\n        <label htmlFor='title' className='active'>Введите название дела</label>\n    </div>\n}\n","import React, {CSSProperties, useContext} from \"react\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport {TodoContext} from \"../../context/todo/todoContext\";\n\nexport const TodoList: React.FC = () => {\n    const {state, deleteTask} = useContext(TodoContext);\n    const del = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        if (event.currentTarget.classList.contains('del')) {\n            let task: HTMLAnchorElement | null = event.currentTarget.closest('.appearance');\n            if (task) {\n                deleteTask(task.dataset.id || '');\n            }\n        }\n    }\n\n    return <TransitionGroup component='ul' className=\"list-group m2 \">\n        {\n            state.todoList.map((item: string, index: number) => <CSSTransition timeout={{enter: 800, exit: 490}}\n                                                                               key={item}\n                                                                               classNames='note'\n                                                                               unmountOnExit={true}\n                                                                               mountOnEnter={true}>\n                <li data-id={item}\n                    key={index}\n                    style={{'--i': index + 1} as CSSProperties}\n                    className=\"list-group-item appearance\">\n                <span className=\"badge del\" onClick={del}>\n                    <i className=\"material-icons\">clear</i>\n                </span>\n                    {item}\n                </li>\n            </CSSTransition>)\n        }\n    </TransitionGroup>\n}\n","import React from \"react\";\n\ninterface TextFormProps {\n    setStr(str: string): void,\n    startSolve(): void,\n    str: string\n};\n\nexport const TextForm: React.FC<TextFormProps> = (props) => {\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.setStr(event.target.value);\n    }\n\n    const onKeyDown = (event: React.KeyboardEvent): void => {\n        if (event.key === 'Enter' && props.str !== '') {\n            props.startSolve();\n            props.setStr('')\n        }\n    }\n\n    return <div className='input-field'>\n        <input id='task' type='text' value={props.str} onChange={onChange} onKeyDown={onKeyDown}/>\n        <label htmlFor='task' className='active'>Введите условие Задачи</label>\n    </div>\n\n}","import {SET_BORDER_STYLE, SET_LOCATION, SET_WIDTH,SET_RADIUS} from \"../types\";\n\nconst handlers: any = {\n    [SET_WIDTH]: (state: any, action: any) => ({...state, width: action.width}),\n    [SET_BORDER_STYLE]: (state: any,action: any) => ({...state, borderStyle: action.borderStyle}),\n    [SET_LOCATION]: (state: any,action: any) => ({...state, location: action.location}),\n    [SET_RADIUS]: (state: any,action: any) => ({...state, radius: action.radius}),\n    DEFAULT: (state:any) => state,\n}\n\nexport const mainReducer = (state: any, action: any) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}","export const SET_WIDTH = 'SET_WIDTH';\nexport const SET_BORDER_STYLE = 'SET_BORDER_STYLE';\nexport const SET_LOCATION = 'SET_LOCATION';\nexport const SET_RADIUS = 'SET_RADIUS';\nexport const SET_TODO_LIST = 'SET_TODO_LIST';\nexport const SET_ANIMATION_SPEED = 'SET_ANIMATION_SPEED';\nexport const SET_BACKGROUND_BLEND_MOD = 'SET_BACKGROUND_BLEND_MOD';\nexport const SET_BACKGROUND_SIZE = 'SET_BACKGROUND_SIZE';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_FILTER_VALUE = 'SET_FILTER_VALUE';\n","import React, {useCallback, useReducer} from \"react\";\nimport {MainContext} from \"./mainContext\";\nimport {mainReducer} from \"./mainReducer\";\nimport {SET_BORDER_STYLE, SET_LOCATION, SET_RADIUS, SET_WIDTH} from \"../types\";\n\nexport const MainState: React.FC = ({children}) => {\n    let [state, dispatch] = useReducer<any>(mainReducer, {\n        width: 40,\n        location: window.location.pathname,\n        radius: 0,\n        borderStyle: 'solid',\n    });\n\n    const setWidth = useCallback((value: number) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_WIDTH,\n            width: value\n        })\n    }, []);\n\n    const setBorderStyle = useCallback((value: string) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_BORDER_STYLE,\n            borderStyle: value\n        })\n    }, []);\n\n    const setLocation = useCallback((value: string) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_LOCATION,\n            location: value\n        })\n    }, []);\n\n    const setRadius = useCallback((value: string) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_RADIUS,\n            radius: value\n        })\n    }, []);\n\n    return <MainContext.Provider value={{setWidth, state, setBorderStyle, setLocation, setRadius}}>\n        {children}\n    </MainContext.Provider>\n}","import React, {useCallback, useContext} from \"react\";\nimport styles from './Aside.module.css';\nimport cn from 'classnames';\nimport {Link} from \"react-router-dom\";\nimport {CSSTransition} from \"react-transition-group\";\nimport './../../App.css';\nimport {MainContext} from \"../../context/main/mainContext\";\n\ninterface IProp {\n    text: string,\n    icon: string,\n}\n\nlet properties: Array<IProp> = [\n    {text: 'border', icon: 'border_all'},\n    {text: 'background', icon: 'healing'},\n    {text: 'animation', icon: 'animation'},\n    {text: 'filter', icon: 'filter'}\n    ];\n\nexport const Aside: React.FC<{ show: boolean }> = (props) => {\n    const {state, setLocation} = useContext(MainContext);\n    const onClick: React.EventHandler<any> = useCallback((event) => {\n        setLocation('/css/' + event.currentTarget.dataset.id);\n    }, [state.location]);\n\n    return <CSSTransition in={props.show}\n                          classNames={'aside'}\n                          timeout={{enter: 500,exit:200}}\n                          mountOnEnter={true}\n                          unmountOnExit={true}\n    >\n        <aside className={cn(styles.main)}>\n            <ul className={styles.list}>\n                {\n                    properties.map((item: IProp) => <li key={item.text}>\n                        <Link onClick={onClick} to={'/css/' + item.text} data-id={item.text}\n                              className={cn(styles.elem, {\n                                  [styles.choose]: state.location === '/css/' + item.text,\n                              })}>\n                            <i className=\"large material-icons\">{item.icon}</i>\n                            {item.text}\n                        </Link>\n                    </li>)\n                }\n            </ul>\n        </aside>\n    </CSSTransition>\n}\n","import React, {useCallback, useRef} from \"react\";\nimport styles from './Slider.module.css'\n\ninterface SliderProps {\n    value: number,\n    setValue(value: any): void\n}\n\nexport const Slider: React.FC<SliderProps> = (props) => {\n    let slider: any = useRef(null);\n    let tumb: any = useRef(null);\n    let value: any = useRef(null);\n\n    const onMouseDown = useCallback((event) => {\n        let containerWidth = slider.current.getBoundingClientRect().width;\n        let width = tumb.current.getBoundingClientRect().width;\n        let left = slider.current.getBoundingClientRect().left + width / 2;\n\n\n        function onMouseMove(event: any) {\n            let newleft = event.pageX - left + width / 2;\n            if (newleft < 0) {\n                newleft = 0;\n            }\n            if (newleft > containerWidth) {\n                newleft = containerWidth;\n            }\n            props.setValue(newleft / containerWidth * 100);\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n\n        function onMouseUp() {\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n        };\n\n    }, []);\n\n    const onDragStart = useCallback((event) => {\n        event.preventDefault();\n    }, []);\n\n    return <div ref={slider} className={styles.slider} onDragStart={onDragStart}>\n        <div ref={value} style={{width: props.value + '%'}} className={styles.value} onDragStart={onDragStart}/>\n        <div ref={tumb} style={{left: props.value + '%'}} onMouseDown={onMouseDown} className={styles.tumb} onDragStart={onDragStart}/>\n    </div>\n}\n","import React, {useCallback, useContext} from \"react\";\nimport {Slider} from \"../../Slider/Slider\";\nimport styles from './Border.module.css';\nimport cn from \"classnames\";\nimport {MainContext} from \"../../../context/main/mainContext\";\n\nexport const Border: React.FC = () => {\n    const {state, setWidth, setBorderStyle, setRadius} = useContext(MainContext);\n    const onClick = useCallback((event) => {\n        setBorderStyle(event.target.textContent);\n    }, []);\n\n    return <section className={styles.main}>\n        <label>border-radius: {Math.ceil(state.radius)}px;</label>\n        <Slider value={state.radius} setValue={setRadius}/>\n        <label>border-width : {Math.ceil(state.width)}px;</label>\n        <Slider value={state.width} setValue={setWidth}/>\n\n        <div className={styles.borderMain}\n             style={{\n                 '--width': state.width,\n                 '--radius': state.radius,\n                 borderStyle: state.borderStyle\n             } as React.CSSProperties}/>\n        <label>border-style: {state.borderStyle};</label>\n        <div className={styles.buttons}>\n            {\n                ['solid', 'inset', 'dashed', 'dotted', 'double', 'groove', 'ridge',].map((i, j) =>\n                    <button className={cn(styles.button, 'waves-effect waves-light btn')}\n                            onClick={onClick}\n                            key={j}>{i}</button>)\n            }\n        </div>\n    </section>\n}\n","import React, {useMemo} from \"react\";\nimport styles from './Drops.module.css';\n\nexport const Drop: React.FC<{ i: number }> = ({i}) => {\n\n    const randomNumbers = useMemo(() => {\n        return {\n            '--s': Math.random(),\n            '--m': Math.random()\n        }\n    }, []);\n    return <span className={styles.drop}\n                 style={{'--i': i + 1, ...randomNumbers} as React.CSSProperties}/>\n}\n","import React from \"react\";\nimport {Drop} from \"./Drop\";\nimport cn from 'classnames';\nimport styles from './Drops.module.css';\n\nexport const Drops: React.FC = () => {\n\n    return <>\n        <div className={styles.dropContainer}>\n            <div className={cn('light-blue darken-3', styles.dropNav)}/>\n            <div className={cn(\"light-blue darken-3\", styles.bottom)}/>\n            {\n                Array.from({length: 10}).map((_, i) => {\n                    return <Drop key={i} i={i}/>\n                })\n            }\n        </div>\n    </>\n}","import {createContext} from \"react\";\n\nexport const BackContext: any = createContext({});\n","import React, {useCallback, useContext} from \"react\";\nimport styles from './Background.module.css';\nimport {Slider} from \"../../Slider/Slider\";\nimport cn from \"classnames\";\nimport {BackContext} from \"../../../context/background/backContext\";\n\nconst blendModeArr = ['normal', 'color', 'color-burn', 'color-dodge', 'darken', 'difference', 'exclusion',\n    'hard-light', 'hue', 'lighten', 'multiply','soft-light','screen','luminosity','saturation','overlay']\n\nexport const Background: React.FC = () => {\n    const {state, setBackgroundSize, setBackgroundBlandMode} = useContext(BackContext);\n    const onClick = useCallback((event) => {\n        setBackgroundBlandMode(event.target.textContent);\n    }, []);\n\n    return <div className={styles.main}>\n\n        <label>background-size: {Math.ceil(state.backgroundSize * 2 + 10)}%;</label>\n        <Slider value={state.backgroundSize} setValue={setBackgroundSize}/>\n\n        <div className={styles.back}\n             style={{\n                 '--size': state.backgroundSize,\n                 backgroundBlendMode: state.backgroundBlendMode,\n             } as React.CSSProperties}/>\n        <label>background-blend-mode: {state.backgroundBlendMode};</label>\n        <div className={styles.buttons}>\n            {\n                blendModeArr.map((i, j) =>\n                    <button className={cn(styles.button, 'waves-effect waves-light btn')}\n                            onClick={onClick}\n                            key={j}>{i}</button>)\n            }\n        </div>\n\n    </div>\n}\n","import {SET_BACKGROUND_BLEND_MOD,SET_BACKGROUND_SIZE } from \"../types\";\n\nconst handlers: any = {\n    [SET_BACKGROUND_SIZE]: (state: any, action: any) => ({...state, backgroundSize: action.backgroundSize}),\n    [SET_BACKGROUND_BLEND_MOD]: (state: any,action: any) => ({...state, backgroundBlendMode: action.backgroundBlendMode}),\n    DEFAULT: (state:any) => state,\n}\n\nexport const backReducer = (state: any, action: any) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}","import React, {useCallback, useReducer} from \"react\";\nimport {BackContext} from \"./backContext\";\nimport {backReducer} from \"./backReducer\";\nimport {SET_BACKGROUND_BLEND_MOD, SET_BACKGROUND_SIZE} from \"../types\";\n\nexport const BackState: React.FC = ({children}) => {\n    let [state, dispatch] = useReducer<any>(backReducer, {\n        backgroundSize: 45,\n        backgroundBlendMode: 'color',\n    });\n\n    const setBackgroundSize = useCallback((value: number) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_BACKGROUND_SIZE,\n            backgroundSize: value\n        })\n    }, []);\n\n    const setBackgroundBlandMode = useCallback((value: string) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_BACKGROUND_BLEND_MOD,\n            backgroundBlendMode: value\n        })\n    }, []);\n\n\n\n    return <BackContext.Provider value={{setBackgroundBlandMode, state, setBackgroundSize }}>\n        {children}\n    </BackContext.Provider>\n}","import {createContext} from \"react\";\n\nexport const FilterContext: any = createContext({});\n","import React, {useCallback, useContext} from \"react\";\nimport styles from './Filter.module.css';\nimport {FilterContext} from \"../../../context/filter/filterContext\";\nimport {Slider} from \"../../Slider/Slider\";\nimport cn from \"classnames\";\n\nconst filtersArr = ['unset', 'blur', 'hue-rotate', 'brightness', 'contrast', 'drop-shadow', 'grayscale', 'invert',\n    'opacity', 'saturate', 'sepia'];\n\nconst filtersMeasure: any = {\n    unset: (value: number) => 'unset',\n    blur: (value: number) => 'blur(' + Math.ceil(value) / 10 + 'px)',\n    brightness: (value: number) => 'brightness(' + Math.ceil(value) / 100 + ')',\n    contrast: (value: number) => 'contrast(' + Math.ceil(value) * 2 + '%)',\n    'drop-shadow': (value: number) => 'drop-shadow(5px 5px ' + Math.ceil(value / 2) + 'px blue)',\n    grayscale: (value: number) => 'grayscale(' + Math.ceil(value)  + '%)',\n    'hue-rotate': (value: number) => 'hue-rotate(' + Math.ceil(value * 3.6) + 'deg)',\n    invert: (value: number) => 'invert(' + Math.ceil(value) + '%)',\n    opacity: (value: number) => 'opacity(' + Math.ceil(value) + '%)',\n    saturate: (value: number) => 'saturate(' + Math.ceil(value) + '%)',\n    sepia: (value: number) => 'sepia(' + Math.ceil(value ) + '%)'\n}\n\nexport const Filter: React.FC = () => {\n    const {state, setFilterValue, setFilter} = useContext(FilterContext);\n    const onClick = useCallback((event) => {\n        setFilter(event.target.textContent);\n    }, []);\n\n    return <div className={styles.main}>\n        <div className={styles.sliderContainer}>\n            <label>filter: {filtersMeasure[state.filter](state.filterValue)};</label>\n            <Slider value={state.filterValue} setValue={setFilterValue}/>\n        </div>\n        <div className={styles.buttons}>\n            {\n                filtersArr.map((i, j) =>\n                    <button className={cn(styles.button, 'waves-effect waves-light btn')}\n                            onClick={onClick}\n                            key={j}>{i}</button>)\n            }\n        </div>\n        <div className={styles.filter}\n             style={{filter: filtersMeasure[state.filter](state.filterValue),} as React.CSSProperties}/>\n\n    </div>\n}","import {SET_FILTER,SET_FILTER_VALUE} from \"../types\";\n\nconst handlers: any = {\n    [SET_FILTER]: (state: any, action: any) => ({...state, filter: action.filter}),\n    [SET_FILTER_VALUE]: (state: any, action: any) => ({...state, filterValue: action.filterValue}),\n    DEFAULT: (state:any) => state,\n}\n\nexport const filterReducer = (state: any, action: any) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}","import React, {useCallback, useReducer} from \"react\";\nimport {FilterContext} from \"./filterContext\";\nimport {filterReducer} from \"./filterReducer\";\nimport {SET_FILTER, SET_FILTER_VALUE} from \"../types\";\n\nexport const FilterState: React.FC = ({children}) => {\n    let [state, dispatch] = useReducer<any>(filterReducer, {\n        filterValue: 40,\n        filter: 'blur'\n    });\n\n    const setFilter = useCallback((value: number) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_FILTER,\n            filter: value\n        })\n    }, []);\n\n    const setFilterValue = useCallback((value: string) => {\n        // @ts-ignore\n        dispatch({\n            type: SET_FILTER_VALUE,\n            filterValue: value\n        })\n    }, []);\n\n    return <FilterContext.Provider value={{state, setFilter, setFilterValue}}>\n        {children}\n    </FilterContext.Provider>\n}","import React, {useContext} from \"react\";\nimport {Aside} from \"../components/Aside/Aside\";\nimport {Route} from \"react-router-dom\";\nimport {Border} from \"../components/CSSProperties/Border/Border\";\nimport {MainContext} from \"../context/main/mainContext\";\nimport {Drops} from \"../components/CSSProperties/Drop/ Drops\";\nimport {Background} from \"../components/CSSProperties/Background/Background\";\nimport {BackState} from \"../context/background/BackState\";\nimport {Filter} from \"../components/CSSProperties/Filter/Filter\";\nimport {FilterState} from \"../context/filter/FilterState\";\n\nexport const CSS: React.FC = () => {\n    const {state} = useContext(MainContext);\n\n    return <>\n        {<Aside show={state.location.toLowerCase().indexOf('css') > 0}/>}\n        <BackState>\n            <FilterState>\n                <Route path='/CSS'>\n                    <Route path='/CSS' exact>\n                        <Border/>\n                    </Route>\n                    <Route path='/CSS/border'>\n                        <Border/>\n                    </Route>\n                    <Route path='/css/animation' exact>\n                        <Drops/>\n                    </Route>\n                    <Route path='/css/background' exact>\n                        <Background/>\n                    </Route>\n\n                    <Route path='/css/filter' exact>\n                        <Filter/>\n                    </Route>\n\n                </Route>\n            </FilterState>\n        </BackState>\n    </>\n}\n","import {SET_TODO_LIST} from \"../types\";\n\nconst handlers: any = {\n    [SET_TODO_LIST]: (state: any, action: any) => ({...state, todoList: action.todoList}),\n    DEFAULT: (state: any) => state,\n}\n\nexport const todoReducer = (state: any, action: any) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}","import React, {useCallback, useReducer} from \"react\";\nimport {TodoContext} from \"./todoContext\";\nimport {todoReducer} from \"./todoReducer\";\nimport {SET_TODO_LIST} from \"../types\";\n\nexport const TodoState: React.FC = ({children}) => {\n    let [state, dispatch] = useReducer(todoReducer, {\n        todoList: [],\n    });\n\n    const addTask = useCallback((str: string): void => {\n        // @ts-ignore\n        dispatch({\n            type: SET_TODO_LIST,\n            // @ts-ignore\n            todoList: [...state.todoList, str],\n        });\n    }, [state]);\n\n    const deleteTask = useCallback((str: string): void => {\n        // @ts-ignore\n        dispatch({\n            type: SET_TODO_LIST,\n            // @ts-ignore\n            todoList: state.todoList.filter((i: string) => str !== i)\n        })\n    }, [state]);\n\n    return <TodoContext.Provider value={{state, addTask, deleteTask}}>\n        {children}\n    </TodoContext.Provider>\n}","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport {TodoForm} from \"./components/Todo/TodoForm\";\nimport {TodoList} from \"./components/Todo/TodoList\";\nimport {TextForm} from \"./components/TextForm\";\nimport {places} from \"./functions/places\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {MainState} from \"./context/main/MainState\";\nimport {CSS} from \"./pages/CSS\";\nimport {TodoState} from \"./context/todo/TodoState\";\n\nconst App: React.FunctionComponent = () => {\n    let [str, setStr] = useState<string>('');\n    let [res, setRes] = useState<string>('');\n\n    const startSolve = useCallback(() => {\n        setRes(places(str));\n    }, [str, res]);\n\n    return <MainState>\n        <TodoState>\n            <Router>\n                <Navbar/>\n                <div className='container'>\n                    <CSS/>\n                    <Route path=\"/\" exact>\n                        <TodoForm/>\n                        <TodoList/>\n                    </Route>\n                    <Route path=\"/Components\" exact>\n                        <TodoForm/>\n                        <TodoList/>\n                    </Route>\n                    <Route path=\"/JavaScript\" exact>\n                        <TextForm str={str} setStr={setStr} startSolve={startSolve}/>\n                        <h2 className='result px1'>Результат: {res}</h2>\n                    </Route>\n                    <svg className='filterSvg ' xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n                        <defs>\n                            <filter id=\"goo\">\n                                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\"/>\n                                <feColorMatrix in=\"blur\" mode=\"matrix\"\n                                               values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\n                                               result=\"goo\"/>\n                                <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\"/>\n                            </filter>\n                        </defs>\n                    </svg>\n                </div>\n                <footer className='page-footer purple darken-2'/>\n            </Router>\n        </TodoState>\n    </MainState>\n}\n\nexport default App;\n","export const places  = (str: string) => {\n\n    return str.toLowerCase().trim().split('').reverse().join('');\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}