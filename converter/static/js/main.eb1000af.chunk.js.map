{"version":3,"sources":["hooks/useStore.js","components/Select/index.js","pages/ConverterPage/Chart.js","components/Converter/index.js","pages/ConverterPage/index.js","pages/Portfolio/Diagram/index.js","pages/Portfolio/Coins/index.js","pages/Portfolio/index.js","App.js","store.js","index.js"],"names":["useStore","useContext","MobXProviderContext","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","select","padding","CustomSelect","value","setValue","id","values","label","classes","FormControl","className","InputLabel","Select","labelId","onChange","event","target","map","index","MenuItem","row","display","title","observer","store","useEffect","fetchChartData","chartCoin","chartVsCurrency","data","useMemo","Array","from","chartData","i","date","Date","name","getDate","getMonth","toPrecision","toFixed","valuesVsCurrency","valuesArr","item","vsCurrency","Box","width","height","top","right","bottom","left","type","dataKey","stroke","strokeDasharray","setChartCoin","setChartVsCurrency","column","input","icon","color","transition","cursor","button","convertFrom","setConvertFrom","convertTo","setConvertTo","coefficient","maxFrom","buttonHandler","selectList","useState","setFrom","to","setTo","onToggle","useCallback","onChangeTo","e","onClick","onChangeFrom","style","justifyContent","TextField","undefined","Button","variant","disabled","fetchCoins","coinFrom","coinTo","console","log","coinsCoefficient","setCoinFrom","setCoinTo","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","labelLine","entry","length","count","sumTitle","fetchAllCoins","userCoins","transactionFrom","transactionTo","transactionCoefficient","rounding","arr","newArr","forEach","setTransactionFrom","setTransactionTo","maxTo","transaction","coinsSum","coinsBase","setCoinsBase","a11yProps","root","flexGrow","backgroundColor","palette","background","paper","tablePanel","box","tabs","TabPanel","props","children","other","role","hidden","aria-labelledby","App","AppBar","position","Tabs","newValue","aria-label","Tab","makeObservable","this","observable","action","k","coin","toLowerCase","solveValues","solveTransactionCoefficient","coinsData","usdCost","a","fetchCoin","sum","solveCoinsCoefficient","fetch","response","ok","json","usd","s","alert","usdArr","prices","ReactDOM","render","document","getElementById"],"mappings":"yRAGe,SAASA,IACpB,OAAOC,qBAAWC,K,wCCDhBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,OAAS,CACL,QAAS,CACLC,QAAS,6BAKN,SAASC,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,MAEzDC,EAAUf,IAMhB,OAAO,eAACgB,EAAA,EAAD,CAAaC,UAAWF,EAAQZ,YAAhC,UACC,cAACe,EAAA,EAAD,CAAYN,GAAIA,EAAK,gBAArB,SAAuCE,IACvC,cAACK,EAAA,EAAD,CACIC,QAASR,EAAK,gBACdA,GAAIA,EACJF,MAAOA,EACPO,UAAWF,EAAQR,OACnBc,SAXS,SAACC,GAClBX,EAASW,EAAMC,OAAOb,QAKlB,SAQQG,EAAOW,KAAI,WAAgBC,GAAhB,IAAEf,EAAF,EAAEA,MAAOI,EAAT,EAASA,MAAT,OAAyB,cAACY,EAAA,EAAD,CAAsBhB,MAAOA,EAA7B,SAAqCI,GAAtBJ,WC1BvE,IAAMV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,IAAK,CACDC,QAAS,OACT,iBAAkB,MAClB,kBAAmB,iBAEvBC,MAAO,CACH,aAAc,SACdzB,OAAQ,cAEZU,MAAO,CACH,aAAc,cA4DPgB,mBAxDf,WAAkB,IACPC,EAASlC,IAATkC,MACDhB,EAAUf,IAEhBgC,qBAAU,WACND,EAAME,eAAeF,EAAMG,UAAWH,EAAMI,mBAC7C,IAEH,IAAMC,EAAOC,mBAAQ,WACjB,OAAOC,MAAMC,KAAKR,EAAMS,WAAWhB,KAAI,SAACd,EAAO+B,GAC3C,IAAIC,EAAO,IAAIC,KAAKjC,EAAM,IAC1B,MAAO,CACHkC,KAAa,KAANH,EAAYC,EAAKG,UAAY,KAAOH,EAAKI,WAAa,GAAK,MAClE,2BAASpC,EAAM,GAAK,GAAMA,EAAM,GAAGqC,YAAY,GAAKrC,EAAM,GAAGsC,QAAQ,SAG9E,CAACjB,EAAMS,YAEJS,EAAmBZ,mBAAQ,WAC7B,OAAON,EAAMmB,UAAU1B,KAAI,SAAC2B,GACxB,MAAO,CACHzC,MAAOyC,EAAKC,WACZtC,MAAOqC,EAAKrC,YAGrB,IAEH,OAAO,eAACuC,EAAA,EAAD,WACH,oBAAIpC,UAAWF,EAAQc,MAAvB,sIACA,eAAC,IAAD,CAAWyB,MAAO,IAAKC,OAAQ,IAAKnB,KAAMA,EAAMhC,OAAQ,CAACoD,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAA/F,UACI,cAAC,IAAD,CAAMC,KAAK,WAAWC,QAAQ,2BAAOC,OAAO,YAC5C,cAAC,IAAD,CAAeA,OAAO,OAAOC,gBAAgB,QAC7C,cAAC,IAAD,IACA,cAAC,IAAD,CAAOF,QAAQ,SACf,cAAC,IAAD,OAEJ,eAACR,EAAA,EAAD,CAAKpC,UAAWF,EAAQY,IAAxB,UACI,cAAClB,EAAD,CACIC,MAAOqB,EAAMG,UACbvB,SAAUoB,EAAMiC,aAChBnD,OAAQkB,EAAMmB,UACdtC,GAAG,YACHE,MAAM,MAEV,uBAAOG,UAAWF,EAAQD,MAA1B,8CACA,cAACL,EAAD,CACIC,MAAOqB,EAAMI,gBACbxB,SAAUoB,EAAMkC,mBAChBpD,OAAQoC,EACRrC,GAAG,kBACHE,MAAM,e,oCClEhBoC,EAAY,CACd,CACIxC,MAAO,UACPI,MAAO,YACPsC,WAAY,OAEhB,CACI1C,MAAO,WACPI,MAAO,WACPsC,WAAY,OAEhB,CACI1C,MAAO,UACPI,MAAO,UACPsC,WAAY,QAIdpD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,IAAK,CACDC,QAAS,OACT,iBAAkB,OAEtBsC,OAAQ,CACJtC,QAAS,OACT,iBAAkB,SAClB,kBAAmB,iBAEvBuC,MAAO,CACH/D,OAAQF,EAAMG,QAAQ,IAE1B+D,KAAM,CACF,aAAc,SACd,YAAa,OACbC,MAAO,OACPjE,OAAQ,SACRkE,WAAY,MACZC,OAAQ,UACR,UAAW,CACPF,MAAO,SAGfG,OAAQ,CACJpE,OAAQ,WACR,aAAc,gBAsGP0B,mBAlGf,YAKG,IAHK2C,EAGN,EAHMA,YAAaC,EAGnB,EAHmBA,eAAgBC,EAGnC,EAHmCA,UAAWC,EAG9C,EAH8CA,aACxCC,EAEN,EAFMA,YAAaC,EAEnB,EAFmBA,QAASC,EAE5B,EAF4BA,cAAcC,EAE1C,EAF0CA,WAE1C,EAC0BC,mBAAS,KADnC,mBACS1C,EADT,KACe2C,EADf,OAEsBD,mBAAS,KAF/B,mBAESE,EAFT,KAEaC,EAFb,KAIQC,EAAWC,uBAAY,WACzBV,EAAaH,GACbC,EAAeC,EAAWF,KAC3B,CAACA,EAAaE,IAEXY,EAAaD,uBAAY,SAACE,GAC5B,IAAI9E,EAAS8E,EAAEjE,OAAOb,MAAQmE,EAAc,KAAQW,EAAEjE,OAAOb,MAAQmE,GAAa9B,YAAY,GAAK,KAC7FyC,EAAEjE,OAAOb,MAAQmE,GAAa7B,QAAQ,GAAK,GACjDoC,EAAMI,EAAEjE,OAAOb,OACfwE,EAAQxE,KACT,CAACmE,IAEEY,EAAUH,uBAAY,WACxBP,EAAcxC,EAAM4C,KACrB,CAAC5C,EAAM4C,IAEJO,EAAeJ,uBAAY,SAACE,GAC9B,IAAI9E,EAAS8E,EAAEjE,OAAOb,MAAQmE,EAAc,KAAQW,EAAEjE,OAAOb,MAAQmE,GAAa9B,YAAY,GAAK,KAC7FyC,EAAEjE,OAAOb,MAAQmE,GAAa7B,QAAQ,GAAK,GACjDoC,EAAM1E,GACNwE,EAAQM,EAAEjE,OAAOb,SAClB,CAACmE,IAEJ7C,qBAAU,WACN,IAAItB,EAAS6B,EAAQsC,EAAc,KAAQtC,EAAQsC,GAAa9B,YAAY,GAAK,KAC3ER,EAAQsC,GAAa7B,QAAQ,GAAK,GACxCoC,EAAM1E,KACP,CAACmE,EAAaJ,EAAaE,IAE9B,IAAM5D,EAAUf,IAEhB,OAAO,qCACH,eAACqD,EAAA,EAAD,CAAKpC,UAAWF,EAAQY,IAAKgE,MAAO,CAACC,eAAgB,iBAArD,UACI,eAACvC,EAAA,EAAD,CAAKpC,UAAWF,EAAQmD,OAAxB,UACI,cAACzD,EAAD,CACIC,MAAO+D,EACP9D,SAAU+D,EACV7D,OAAQqC,EACRpC,MAAM,gBACNF,GAAG,iBAEP,cAACiF,EAAA,EAAD,CACI5E,UAAWF,EAAQoD,MACnBzD,MAAO6B,EACPlB,SAAUqE,EACV9E,GAAG,qBACHgD,KAAK,cAGb,cAACP,EAAA,EAAD,CAAKpC,UAAWF,EAAQY,IAAxB,SACI,cAAC0B,EAAA,EAAD,CAAKpC,UAAWF,EAAQqD,KAAxB,SACI,cAAC,IAAD,CAAaqB,QAASJ,QAG9B,eAAChC,EAAA,EAAD,CAAKpC,UAAWF,EAAQmD,OAAxB,UACI,cAACzD,EAAD,CACIC,MAAOiE,EACPhE,SAAUiE,EACV/D,OAAQmE,EACRpE,GAAG,aACHE,MAAM,gBAEV,cAAC+E,EAAA,EAAD,CACI5E,UAAWF,EAAQoD,MACnBzD,MAAOyE,EACP9D,SAAUkE,EACV3E,GAAG,mBACHgD,KAAK,iBAIJ,OAAZkB,QAAgCgB,IAAZhB,GACrB,qCACI,cAACiB,EAAA,EAAD,CAAQ9E,UAAWF,EAAQyD,OACnBwB,QAAQ,YACRP,QAASA,EACTQ,SAAU1D,EAAOuC,EACjBT,MAAM,UAJd,8DAQI9B,EAAOuC,GACP,2GC1IV9E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,IAAK,CACDC,QAAS,OACT,iBAAkB,OAEtBsC,OAAQ,CACJtC,QAAS,OACT,iBAAkB,UAEtBuC,MAAO,CACH/D,OAAQF,EAAMG,QAAQ,IAE1B+D,KAAM,CACF,aAAc,SACd,YAAa,OACbC,MAAO,OACPjE,OAAQ,SACRkE,WAAY,MACZC,OAAQ,UACR,UAAW,CACPF,MAAO,aA8BJvC,mBAzBf,WAEI,IAAMf,EAAUf,IAET+B,EAASlC,IAATkC,MAQP,OANAC,qBAAU,WACND,EAAMmE,WAAWnE,EAAMoE,SAAUpE,EAAMqE,UACxC,CAACrE,EAAMoE,WAEVE,QAAQC,IAAI,QAASvE,EAAMwE,kBAEpB,eAAClD,EAAA,EAAD,CAAKpC,UAAWF,EAAQmD,OAAxB,UACH,cAAC,EAAD,CACIO,YAAa1C,EAAMoE,SACnBxB,UAAW5C,EAAMqE,OACjB1B,eAAgB3C,EAAMyE,YACtB5B,aAAc7C,EAAM0E,UACpB5B,YAAa9C,EAAMwE,iBACnBvB,WAAYjD,EAAMmB,YAEtB,cAAC,EAAD,U,SC/CFwD,EAAS,CAAC,UAAW,UAAW,WAEhCC,EAASC,KAAKC,GAAK,IA8CV/E,mBA5Cf,YAA0B,IAARM,EAAO,EAAPA,KAER0E,EAAwBzE,mBAAQ,WAClC,OAAO,YAEQ,IADH0E,EACE,EADFA,GAAIC,EACF,EADEA,GAAIC,EACN,EADMA,SAAUC,EAChB,EADgBA,YAAaC,EAC7B,EAD6BA,YAAaC,EAC1C,EAD0CA,QAE9CC,GADI,EADmD5F,MAE9CyF,EAA4C,IAA7BC,EAAcD,IACtCI,EAAIP,EAAKM,EAAST,KAAKW,KAAKN,EAAWN,GACvCa,EAAIR,EAAKK,EAAST,KAAKa,KAAKR,EAAWN,GAE7C,OACI,sBAAMW,EAAGA,EAAGE,EAAGA,EAAGE,KAAK,QAAQC,WAAYL,EAAIP,EAAK,QAAU,MAAOa,iBAAiB,UAAtF,UACgB,IAAVR,GAAepE,QAAQ,GAAK,EAA7B,WAA+C,IAAVoE,GAAepE,QAAQ,GAA5D,KAAkE,QAIhF,CAACZ,IAEJ,OACI,eAAC,IAAD,CAAUkB,MAAO,IAAKC,OAAQ,IAA9B,UACI,cAAC,IAAD,CACInB,KAAMA,EACN2E,GAAI,IACJC,GAAI,IACJa,WAAW,EACX/G,MAAOgG,EACPK,YAAa,IACbO,KAAK,UACL7D,QAAQ,QARZ,SAWQzB,EAAKZ,KAAI,SAACsG,EAAOrG,GAAR,OACL,cAAC,IAAD,CAEIiG,KAAMhB,EAAOjF,EAAQiF,EAAOqB,SAFhC,eACiBtG,SAK7B,cAAC,IAAD,IACA,cAAC,IAAD,UC7CNzB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,IAAK,CACDC,QAAS,OACT,iBAAkB,MAClB,kBAAmB,iBAEvBC,MAAO,CACHzB,OAAQ,iBAEZU,MAAO,CACH,aAAc,cAiBPgB,mBAbf,YAAwB,IAARM,EAAO,EAAPA,KACNrB,EAAUf,IAEhB,OAAO,cAACqD,EAAA,EAAD,CAAKpC,UAAWF,EAAQY,IAAxB,SACFS,EAAKZ,KAAI,SAAC2B,EAAK1B,GAAN,OACN,eAAC4B,EAAA,EAAD,CAAiBpC,UAAWF,EAAQmD,OAApC,UACI,oBAAIjD,UAAWF,EAAQc,MAAvB,SAA+BsB,EAAKP,OACpC,gCAAQO,EAAK6E,UAFPvG,WCdhByB,EAAY,CACd,CACIxC,MAAO,UACPI,MAAO,YACPsC,WAAY,OAEhB,CACI1C,MAAO,WACPI,MAAO,WACPsC,WAAY,OAEhB,CACI1C,MAAO,UACPI,MAAO,UACPsC,WAAY,QAIdpD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgE,OAAQ,CACJtC,QAAS,OACT,iBAAkB,UAEtBC,MAAO,CACHzB,OAAQ,YAEZ6H,SAAU,CACN7H,OAAQ,wBA4DD0B,mBAxDf,WAAsB,IAEXC,EAASlC,IAATkC,MACDhB,EAAUf,IAEhBgC,qBAAU,WACND,EAAMmG,kBACP,IAEH7B,QAAQC,IAAI,YAAavE,EAAMoG,WAG/B9B,QAAQC,IAAI,kBAAmBvE,EAAMqG,gBAAiB,gBAAiBrG,EAAMsG,cACzE,yBAA0BtG,EAAMuG,wBAEpC,IAAMC,EAAWjD,uBAAY,SAACkD,GAC1B,IAAIC,EAAM,YAAOD,GAQjB,OAPAC,EAAOC,SAAQ,SAACvF,GACRA,EAAKzC,MAAQ,EACbyC,EAAKzC,OAAUyC,EAAKzC,MAAMsC,QAAQ,GAElCG,EAAKzC,OAAUyC,EAAKzC,MAAMqC,YAAY,MAGvC0F,IACR,IAEH,OAAQ,eAACpF,EAAA,EAAD,WACA,oBAAIpC,UAAWF,EAAQc,MAAvB,2EACA,cAAC,EAAD,CACI4C,YAAa1C,EAAMqG,gBACnBzD,UAAW5C,EAAMsG,cACjB3D,eAAgB3C,EAAM4G,mBACtB/D,aAAc7C,EAAM6G,iBACpB/D,YAAa9C,EAAMuG,uBACnBxD,QAAS/C,EAAM+C,QACf+D,MAAO9G,EAAM8G,MACb7D,WAAYjD,EAAMmB,UAClB6B,cAAehD,EAAM+G,cAEzB,cAAC,EAAD,CAAO1G,KAAML,EAAMoG,YACnB,cAAC,EAAD,CAAS/F,KAAMmG,EAASxG,EAAMoG,aAC9B,eAAC9E,EAAA,EAAD,WACI,qBAAIpC,UAAWF,EAAQkH,SAAvB,qGAAoDlG,EAAMgH,YAC1D,cAACtI,EAAD,CACIC,MAAOqB,EAAMiH,UACbrI,SAAUoB,EAAMkH,aAChBpI,OAAQqC,EACRpC,MAAM,8CACNF,GAAG,yBCpFvB,SAASsI,EAAUzH,GACf,MAAO,CACHb,GAAG,cAAD,OAAgBa,GAClB,gBAAgB,mBAAhB,OAAoCA,IAI5C,IAAMzB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiJ,KAAM,CACFC,SAAU,EACVC,gBAAiBnJ,EAAMoJ,QAAQC,WAAWC,OAE9CC,WAAY,CACRjJ,QAAS,QAEbkJ,IAAK,CACD9H,QAAS,OACT,iBAAkB,SAClB,cAAe,UAEnB+H,KAAM,CACFvJ,OAAQ,cAIhB,SAASwJ,EAASC,GAAQ,IACfC,EAAoCD,EAApCC,SAAUpJ,EAA0BmJ,EAA1BnJ,MAAOe,EAAmBoI,EAAnBpI,MAAUsI,EADb,YACsBF,EADtB,8BAEf9I,EAAUf,IAChB,OACI,6CACIgK,KAAK,WACLC,OAAQvJ,IAAUe,EAClBb,GAAE,0BAAqBa,GACvByI,kBAAA,qBAA+BzI,IAC3BsI,GALR,aAOKrJ,IAAUe,GACP,cAAC4B,EAAA,EAAD,CAAKpC,UAAWF,EAAQ2I,IAAxB,SACKI,OAsCNK,I,mFAAAA,GA/Bf,WAEI,IAAMpJ,EAAUf,IAFL,EAGeiF,mBAAS,GAHxB,mBAGJvE,EAHI,KAGGC,EAHH,KASX,OACI,sBAAKM,UAAWF,EAAQoI,KAAxB,UACI,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,CAAM5J,MAAOA,EACPO,UAAWF,EAAQ4I,KACnBtI,SATG,SAACC,EAAOiJ,GACzB5J,EAAS4J,IASKC,aAAW,sBAHjB,UAKI,cAACC,EAAA,EAAD,aAAK3J,MAAM,0DAAgBoI,EAAU,KACrC,cAACuB,EAAA,EAAD,aAAK3J,MAAM,oDAAeoI,EAAU,UAG5C,cAACU,EAAD,CAAU3I,UAAWF,EAAQ0I,WAAY/I,MAAOA,EAAOe,MAAO,EAA9D,SACI,cAAC,EAAD,MAEJ,cAACmI,EAAD,CAAU3I,UAAWF,EAAQ0I,WAAY/I,MAAOA,EAAOe,MAAO,EAA9D,SACI,cAAC,EAAD,U,oFCoJVM,GAAQ,I,EA5NV,aAAe,0BAIfmB,UAAY,CACR,CACIxC,MAAO,UACPI,MAAO,YACPsC,WAAY,OAEhB,CACI1C,MAAO,WACPI,MAAO,WACPsC,WAAY,OAEhB,CACI1C,MAAO,UACPI,MAAO,UACPsC,WAAY,QAlBN,+sCACVsH,aAAeC,O,8CAsBlBC,M,wEAA6B,c,4CAC7BA,M,wEAA2B,a,qDAC3BA,M,yEAAoC,K,sCACpCA,M,wEAAqB,M,0CAErBC,M,oFAAqB,SAACnK,GACnB2F,QAAQC,IAAI,cAAe5F,SAAcA,GACzC,IAAIoK,EAAI,EAAKxC,uBACb,EAAKH,UAAUO,SAAQ,SAACqC,GAChBA,EAAKnI,KAAKoI,gBAAkB,EAAK5C,kBAE7B2C,EAAK/C,MADLtH,EAAQ,IACQqK,EAAK/C,OAAStH,GAAOsC,QAAQ,KAE7B+H,EAAK/C,OAAStH,GAAOqC,YAAY,IAGrDgI,EAAKnI,KAAKoI,gBAAkB,EAAK3C,gBAE7B0C,EAAK/C,MADLtH,EAAQ,IACQqK,EAAK/C,QAAStH,GAASoK,GAAG9H,QAAQ,KAElC+H,EAAK/C,QAAStH,GAASoK,GAAG/H,YAAY,OAI9D,EAAKsF,gBAAkB,EAAKD,kBAC5B,EAAKtD,QAAU,EAAKA,QAAUpE,GAElC,EAAKuK,kB,iDAGRJ,M,oFAA4B,SAACE,GAC1B,EAAK3C,gBAAkB2C,EACvB,EAAKG,4BAA4BH,EAAM,EAAK1C,eAC5ChC,QAAQC,IAAI,OAAQyE,EAAM,EAAKI,UAAUJ,GAAMK,SAC/C,EAAKjD,UAAUO,SAAQ,YAAoB,IAAlB9F,EAAiB,EAAjBA,KAAMoF,EAAW,EAAXA,MACvBpF,EAAKoI,gBAAkBD,IACvB,EAAKjG,QAAUkD,EACf3B,QAAQC,IAAI,gB,2DAKvBuE,M,oFAAqC,SAACtI,EAAM4C,GACzCkB,QAAQC,IAAI,OAAQ/D,EAAM,KAAM4C,EAAI,EAAKgG,WACzC,EAAK7C,uBAAyB,EAAK6C,UAAU5I,GAAM6I,QAAU,EAAKD,UAAUhG,GAAIiG,Y,gDAGnFP,M,oFAA0B,SAACE,GACxB,EAAK1C,cAAgB0C,EACrB,EAAKG,4BAA4B,EAAK9C,gBAAiB2C,GACvD1E,QAAQC,IAAI,OAAQyE,O,yCAGvBH,M,wEAAuB,CACpB,CAAChI,KAAM,UAAWoF,MAAO,EAAGtH,MAAO,GACnC,CAACkC,KAAM,UAAWoF,MAAO,IAAOtH,MAAO,GACvC,CAACkC,KAAM,WAAYoF,MAAO,GAAItH,MAAO,O,yCAGxCkK,M,wEAAuB,a,wCACvBA,M,wEAAsB,M,6CAEtBC,M,4GAAuB,mCAAAQ,EAAA,qEACH,EAAKnI,WADF,4DACXC,EADW,QAEZ4H,EAAO5H,EAAKzC,MACX,EAAKyK,UAAUJ,GAHJ,gCAIN,EAAKO,UAAUP,GAJT,8IAOpB,EAAKpC,mBAAmB,EAAKP,iBAC7B,EAAK6C,cARe,mE,2CAWvBJ,M,oFAAqB,WAClBxE,QAAQC,IAAI,SACZ,IAAIiF,EAAM,EACV,EAAKpD,UAAUO,SAAQ,SAACvF,GACpBkD,QAAQC,IAAI,OAAQnD,EAAKP,KAAM,KAAM,EAAKoG,UAAW,EAAKmC,WAC1D,IAAItG,EAAc,EAAKsG,UAAUhI,EAAKP,KAAKoI,eAAeI,QAAU,EAAKD,UAAU,EAAKnC,WAAWoC,QACnGjI,EAAKzC,MAAQyC,EAAK6E,MAAQnD,EAC1B0G,GAAOpI,EAAKzC,SAGZ,EAAKqI,SADLwC,EAAM,GACUA,EAAIvI,QAAQ,GAEZuI,EAAIxI,YAAY,O,4CAIvC8H,M,oFAAsB,SAACE,GACpB,EAAK/B,UAAY+B,EACjB,EAAKE,kB,wCAIRL,M,wEAAsB,c,sCACtBA,M,wEAAoB,a,gDACpBA,M,yEAA8B,K,yCAC9BA,M,wEAAuB,M,2CAEvBC,M,6HAAqB,WAAOE,GAAP,UAAAM,EAAA,yDACb,EAAKF,UAAUJ,GADF,gCAER,EAAKO,UAAUP,GAFP,OAIlB,EAAKS,sBAAsBT,EAAM,EAAK3E,QACtC,EAAKD,SAAW4E,EALE,2C,8GAQrBF,M,oFAA+B,SAACtI,EAAM4C,GACnCkB,QAAQC,IAAI,OAAQ/D,EAAM,KAAM4C,EAAI,EAAKgG,WACzC,EAAK5E,iBAAmB,EAAK4E,UAAU5I,GAAM6I,QAAU,EAAKD,UAAUhG,GAAIiG,Y,yCAG7EP,M,6HAAmB,WAAOE,GAAP,UAAAM,EAAA,yDACX,EAAKF,UAAUJ,GADJ,gCAEN,EAAKO,UAAUP,GAFT,OAIhB,EAAKS,sBAAsB,EAAKrF,SAAU4E,GAC1C,EAAK3E,OAAS2E,EALE,2C,kGAQnBF,M,6HAAmB,WAAOE,GAAP,oBAAAM,EAAA,yDACH,YAATN,EADY,0CAGaU,MAAM,0CAAD,OAA2CV,IAH7D,YAGJW,EAHI,QAIKC,GAJL,iCAKaD,EAASE,OALtB,OAKAA,EALA,OAMJvF,QAAQC,IAAIsF,EAAI,YAAJ,cAAqCC,KAC7CC,EAPA,aAOKV,QAASQ,EAAI,YAAJ,cAAqCC,KAAQD,GAC/D,EAAKT,UAAUJ,GAAQe,EACvBzF,QAAQC,IAAI,OAAQwF,GAThB,wBAWJzF,QAAQC,IAAI,SAXR,0DAcRD,QAAQC,IAAR,MACAyF,MAAM,iEAfE,gCAkBZ,EAAKZ,UAAUJ,GAAQ,CAACK,QAAS,EAAGxI,KAAM,WAlB9B,0D,mGAsBnBiI,M,6HAAoB,WAAOtI,EAAM4C,GAAb,UAAAkG,EAAA,sEACX,EAAKC,UAAU/I,GADJ,uBAEX,EAAK+I,UAAUnG,GAFJ,OAGjB,EAAKqG,sBAAsBjJ,EAAM4C,GAHhB,2C,oGAMpByF,M,wEAAuB,M,yCACvBA,M,wEAAuB,c,+CACvBA,M,wEAA6B,S,4CAE7BC,M,oFAAsB,SAACE,GACpB,EAAK7I,UAAY6I,EACjB,EAAK9I,eAAe8I,EAAM,EAAK5I,qB,kDAGlC0I,M,oFAA4B,SAACzH,GAC1B,EAAKjB,gBAAkBiB,EACvB,EAAKnB,eAAe,EAAKC,UAAWkB,O,8CAGvCyH,M,6HAAwB,WAAOE,EAAM3H,GAAb,wBAAAiI,EAAA,+EAEII,MAAM,0CAAD,OAA2CV,EAA3C,qCAA4E3H,EAA5E,4BAFT,UAEbsI,EAFa,OAIJ,YAATX,EAJa,iCAKQU,MAAM,0CAAD,OAA2CV,EAA3C,yDALb,YAKTW,EALS,QAMAC,GANA,kCAOQD,EAASE,OAPjB,QAOLA,EAPK,OAQTI,EAASJ,EAAKK,OACd5F,QAAQC,IAAI,OAAQsF,GATX,wBAWTvF,QAAQC,IAAI,SAXH,YAcboF,EAASC,GAdI,kCAeID,EAASE,OAfb,QAeTA,EAfS,OAgBA,YAATb,IACA1E,QAAQC,IAAI,QACZsF,EAAKK,OAASL,EAAKK,OAAOzK,KAAI,SAAC2B,EAAM1B,GACjC,MAAO,CAAC0B,EAAK,GAAIA,EAAK,GAAK6I,EAAOvK,GAAO,QAGjD,EAAKe,UAAYoJ,EAAKK,OACtB5F,QAAQC,IAAI,OAAQsF,EAAM,YAAa,EAAKpJ,WAvB/B,wBAyBb6D,QAAQC,IAAI,SAzBC,0DA4BjBD,QAAQC,IAAR,MACAyF,MAAM,iEA7BW,0D,8DCtL7BG,IAASC,OACL,cAAC,IAAD,CAAUpK,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJqK,SAASC,eAAe,W","file":"static/js/main.eb1000af.chunk.js","sourcesContent":["import {useContext} from 'react';\nimport { MobXProviderContext } from 'mobx-react'\n\nexport default function useStore() {\n    return useContext(MobXProviderContext);\n}\n","import React from \"react\";\nimport {Select, InputLabel, MenuItem, FormControl, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n    select : {\n        '& div': {\n            padding: '10px 20px !important'\n        }\n    }\n}));\n\nexport default function CustomSelect({value, setValue, id, values, label}) {\n\n    const classes = useStyles();\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return <FormControl className={classes.formControl}>\n            <InputLabel id={id + \" select-label\"}>{label}</InputLabel>\n            <Select\n                labelId={id + \" select-label\"}\n                id={id}\n                value={value}\n                className={classes.select}\n                onChange={handleChange}\n            >\n                {\n                    values.map(({value, label},index)=> <MenuItem key={value} value={value}>{label}</MenuItem>)\n                }\n            </Select>\n        </FormControl>\n}\n","import React, {useEffect, useMemo} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {CartesianGrid, Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport useStore from \"../../hooks/useStore\";\nimport CustomSelect from \"../../components/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        display: 'flex',\n        'flex-direction': 'row',\n        'justify-content': 'space-between',\n    },\n    title: {\n        'text-align': 'center',\n        margin: '30px 0 0 0',\n    },\n    label: {\n        'align-self': 'center'\n    }\n}));\n\nfunction Chart() {\n    const {store} = useStore();\n    const classes = useStyles();\n\n    useEffect(() => {\n        store.fetchChartData(store.chartCoin, store.chartVsCurrency);\n    }, []);\n\n    const data = useMemo(() => {\n        return Array.from(store.chartData).map((value, i) => {\n            let date = new Date(value[0]);\n            return {\n                name: (i !== 14) ? date.getDate() + '.' + (date.getMonth() + 1) : 'now',\n                'цена': (value[1] < 10) ? value[1].toPrecision(5) : value[1].toFixed(2),\n            }\n        })\n    }, [store.chartData]);\n\n    const valuesVsCurrency = useMemo(() => {\n        return store.valuesArr.map((item) => {\n            return {\n                value: item.vsCurrency,\n                label: item.label\n            }\n        })\n    }, []);\n\n    return <Box>\n        <h3 className={classes.title}>Изменение цены за 14 дней</h3>\n        <LineChart width={600} height={300} data={data} margin={{top: 35, right: 20, bottom: 20, left: 20}}>\n            <Line type=\"monotone\" dataKey=\"цена\" stroke=\"#8884d8\"/>\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\"/>\n            <Tooltip/>\n            <XAxis dataKey=\"name\"/>\n            <YAxis/>\n        </LineChart>\n        <Box className={classes.row}>\n            <CustomSelect\n                value={store.chartCoin}\n                setValue={store.setChartCoin}\n                values={store.valuesArr}\n                id='coinChart'\n                label='X'\n            />\n            <label className={classes.label}>Цена в:</label>\n            <CustomSelect\n                value={store.chartVsCurrency}\n                setValue={store.setChartVsCurrency}\n                values={valuesVsCurrency}\n                id='vsCurrencyChart'\n                label='Y'\n            />\n        </Box>\n    </Box>\n}\n\nexport default observer(Chart);","import React, {useCallback, useEffect, useState} from \"react\";\nimport {Box, Button, makeStyles, TextField} from \"@material-ui/core\";\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\nimport CustomSelect from \"../../components/Select\";\nimport {observer} from \"mobx-react\";\n\nconst valuesArr = [\n    {\n        value: 'dollars',\n        label: 'US Dollar',\n        vsCurrency: 'usd'\n    },\n    {\n        value: 'ethereum',\n        label: 'Ethereum',\n        vsCurrency: 'eth'\n    },\n    {\n        value: 'bitcoin',\n        label: 'Bitcoin',\n        vsCurrency: 'btc'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        display: 'flex',\n        'flex-direction': 'row'\n    },\n    column: {\n        display: 'flex',\n        'flex-direction': 'column',\n        'justify-content': 'space-between'\n    },\n    input: {\n        margin: theme.spacing(1)\n    },\n    icon: {\n        'align-self': 'center',\n        'font-size': '24px',\n        color: '#666',\n        margin: '0 20px',\n        transition: '.2s',\n        cursor: 'pointer',\n        '&:hover': {\n            color: '#111'\n        }\n    },\n    button: {\n        margin: '10px 8px',\n        'align-self': 'flex-end',\n    }\n}));\n\nfunction Converter(\n    {\n        convertFrom, setConvertFrom, convertTo, setConvertTo,\n        coefficient, maxFrom, buttonHandler,selectList\n    }\n) {\n    const [from, setFrom] = useState('1');\n    const [to, setTo] = useState('1');\n\n    const onToggle = useCallback(() => {\n        setConvertTo(convertFrom);\n        setConvertFrom(convertTo, convertFrom);\n    }, [convertFrom, convertTo]);\n\n    const onChangeTo = useCallback((e) => {\n        let value = (e.target.value / coefficient < 10) ? +(e.target.value / coefficient).toPrecision(4) + '' :\n            +(e.target.value / coefficient).toFixed(2) + '';\n        setTo(e.target.value);\n        setFrom(value);\n    }, [coefficient]);\n\n    const onClick = useCallback(() => {\n        buttonHandler(from, to);\n    }, [from, to]);\n\n    const onChangeFrom = useCallback((e) => {\n        let value = (e.target.value * coefficient < 10) ? +(e.target.value * coefficient).toPrecision(4) + '' :\n            +(e.target.value * coefficient).toFixed(2) + '';\n        setTo(value);\n        setFrom(e.target.value);\n    }, [coefficient]);\n\n    useEffect(() => {\n        let value = (from  * coefficient < 10) ? +(from  * coefficient).toPrecision(4) + '' :\n            +(from  * coefficient).toFixed(2) + '';\n        setTo(value);\n    }, [coefficient, convertFrom, convertTo]);\n\n    const classes = useStyles();\n\n    return <>\n        <Box className={classes.row} style={{justifyContent: 'space-between'}}>\n            <Box className={classes.column}>\n                <CustomSelect\n                    value={convertFrom}\n                    setValue={setConvertFrom}\n                    values={valuesArr}\n                    label='from Currency'\n                    id='fromCurrency'\n                />\n                <TextField\n                    className={classes.input}\n                    value={from}\n                    onChange={onChangeFrom}\n                    id=\"fromCurrencyNumber\"\n                    type='number'\n                />\n            </Box>\n            <Box className={classes.row}>\n                <Box className={classes.icon}>\n                    <SyncAltIcon onClick={onToggle}/>\n                </Box>\n            </Box>\n            <Box className={classes.column}>\n                <CustomSelect\n                    value={convertTo}\n                    setValue={setConvertTo}\n                    values={selectList}\n                    id='toCurrency'\n                    label='to Currency'\n                />\n                <TextField\n                    className={classes.input}\n                    value={to}\n                    onChange={onChangeTo}\n                    id=\"toCurrencyNumber\"\n                    type='number'\n                />\n            </Box>\n        </Box>\n        {maxFrom !== null && maxFrom !== undefined &&\n        <>\n            <Button className={classes.button}\n                    variant=\"contained\"\n                    onClick={onClick}\n                    disabled={from > maxFrom}\n                    color=\"primary\">\n                Обменять\n            </Button>\n            {\n                from > maxFrom &&\n                <label>Столько нет</label>\n            }\n        </>\n        }\n    </>\n}\n\nexport default observer(Converter);\n","import React, {useEffect} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Chart from \"./Chart\";\nimport {observer} from \"mobx-react\";\nimport Converter from \"../../components/Converter\";\nimport useStore from \"../../hooks/useStore\";\n\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        display: 'flex',\n        'flex-direction': 'row'\n    },\n    column: {\n        display: 'flex',\n        'flex-direction': 'column'\n    },\n    input: {\n        margin: theme.spacing(1)\n    },\n    icon: {\n        'align-self': 'center',\n        'font-size': '24px',\n        color: '#666',\n        margin: '0 20px',\n        transition: '.2s',\n        cursor: 'pointer',\n        '&:hover': {\n            color: '#111'\n        }\n    }\n}));\n\nfunction ConverterPage() {\n\n    const classes = useStyles();\n\n    const {store} = useStore();\n\n    useEffect(() => {\n        store.fetchCoins(store.coinFrom, store.coinTo);\n    }, [store.coinFrom]);\n\n    console.log('coeff', store.coinsCoefficient);\n\n    return <Box className={classes.column}>\n        <Converter\n            convertFrom={store.coinFrom}\n            convertTo={store.coinTo}\n            setConvertFrom={store.setCoinFrom}\n            setConvertTo={store.setCoinTo}\n            coefficient={store.coinsCoefficient}\n            selectList={store.valuesArr}\n        />\n        <Chart/>\n    </Box>\n}\n\nexport default observer(ConverterPage);\n","import React, {useMemo} from 'react';\nimport {observer} from \"mobx-react\";\nimport {\n    PieChart, Pie, Cell, Tooltip, Legend\n} from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\n\nconst RADIAN = Math.PI / 180;\n\nfunction Diagram({data}) {\n\n    const renderCustomizedLabel = useMemo(() => {\n        return ({\n                    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n                }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            return (\n                <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                    {(percent * 100).toFixed(0) > 0 ? `${(percent * 100).toFixed(0)}%`:''}\n                </text>\n            );\n        };\n    }, [data]);\n\n    return (\n        <PieChart width={400} height={300}>\n            <Pie\n                data={data}\n                cx={200}\n                cy={150}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={100}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n            >\n                {\n                    data.map((entry, index) =>\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORS[index % COLORS.length]}\n                        />)\n                }\n            </Pie>\n            <Tooltip/>\n            <Legend/>\n        </PieChart>\n    );\n}\n\nexport default observer(Diagram);\n","import React from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {observer} from \"mobx-react\";\n\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        display: 'flex',\n        'flex-direction': 'row',\n        'justify-content': 'space-between',\n    },\n    title: {\n        margin: '20px 0 10px 0',\n    },\n    label: {\n        'align-self': 'center'\n    }\n}));\n\nfunction Coins({data}) {\n    const classes = useStyles();\n\n    return <Box className={classes.row}>\n        {data.map((item,index) =>\n            <Box key={index} className={classes.column}>\n                <h4 className={classes.title}>{item.name}</h4>\n                <label>{item.count}</label>\n            </Box>\n        )}\n    </Box>\n}\n\nexport default observer(Coins);\n","import React, {useCallback, useEffect} from 'react';\nimport {observer} from \"mobx-react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport useStore from \"../../hooks/useStore\";\nimport Diagram from \"./Diagram\";\nimport CustomSelect from \"../../components/Select\";\nimport Converter from \"../../components/Converter\";\nimport Coins from \"./Coins\";\n\nconst valuesArr = [\n    {\n        value: 'dollars',\n        label: 'US Dollar',\n        vsCurrency: 'usd'\n    },\n    {\n        value: 'ethereum',\n        label: 'Ethereum',\n        vsCurrency: 'eth'\n    },\n    {\n        value: 'bitcoin',\n        label: 'Bitcoin',\n        vsCurrency: 'btc'\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    column: {\n        display: 'flex',\n        'flex-direction': 'column'\n    },\n    title: {\n        margin: '20px 8px'\n    },\n    sumTitle: {\n        margin: '20px 8px 8px 8px'\n    }\n}));\n\nfunction Portfolio() {\n\n    const {store} = useStore();\n    const classes = useStyles();\n\n    useEffect(() => {\n        store.fetchAllCoins();\n    }, []);\n\n    console.log('userCoins', store.userCoins);\n    // console.log('userData', store.coinsData);\n\n    console.log('transactionFrom', store.transactionFrom, 'transactionTo', store.transactionTo,\n        'transactionCoefficient', store.transactionCoefficient);\n\n    const rounding = useCallback((arr) => {\n        let newArr = [...arr];\n        newArr.forEach((item) => {\n            if (item.value > 1) {\n                item.value = +(item.value.toFixed(2));\n            } else {\n                item.value = +(item.value.toPrecision(5));\n            }\n        });\n        return newArr\n    }, []);\n\n    return (<Box>\n            <h2 className={classes.title}>Обмен валют</h2>\n            <Converter\n                convertFrom={store.transactionFrom}\n                convertTo={store.transactionTo}\n                setConvertFrom={store.setTransactionFrom}\n                setConvertTo={store.setTransactionTo}\n                coefficient={store.transactionCoefficient}\n                maxFrom={store.maxFrom}\n                maxTo={store.maxTo}\n                selectList={store.valuesArr}\n                buttonHandler={store.transaction}\n            />\n            <Coins data={store.userCoins}/>\n            <Diagram data={rounding(store.userCoins)}/>\n            <Box>\n                <h4 className={classes.sumTitle}>Всего в портфеле: {store.coinsSum}</h4>\n                <CustomSelect\n                    value={store.coinsBase}\n                    setValue={store.setCoinsBase}\n                    values={valuesArr}\n                    label='валюта в'\n                    id='sumCurrency'\n                />\n            </Box>\n        </Box>\n    );\n}\n\nexport default observer(Portfolio);\n","import React, {useState} from \"react\";\nimport {AppBar, Tabs, Tab, Box, makeStyles} from \"@material-ui/core\";\nimport Converter from \"./pages/ConverterPage\";\nimport Portfolio from \"./pages/Portfolio\";\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    tablePanel: {\n        padding: '30px'\n    },\n    box: {\n        display: 'flex',\n        'flex-direction': 'column',\n        'align-items': 'center'\n    },\n    tabs: {\n        margin: '0 auto'\n    }\n}));\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n    const classes = useStyles();\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box className={classes.box}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction App() {\n\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs value={value}\n                      className={classes.tabs}\n                      onChange={handleChange}\n                      aria-label=\"simple tabs example\"\n                >\n                    <Tab label=\"Конвертер\" {...a11yProps(0)} />\n                    <Tab label=\"Портфель\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel className={classes.tablePanel} value={value} index={0}>\n                <Converter/>\n            </TabPanel>\n            <TabPanel className={classes.tablePanel} value={value} index={1}>\n                <Portfolio/>\n            </TabPanel>\n        </div>\n    );\n}\n\nexport default App;\n","import {action, observable, makeObservable} from 'mobx';\n\nclass Store {\n    constructor() {\n        makeObservable(this)\n    }\n\n    valuesArr = [\n        {\n            value: 'dollars',\n            label: 'US Dollar',\n            vsCurrency: 'usd'\n        },\n        {\n            value: 'ethereum',\n            label: 'Ethereum',\n            vsCurrency: 'eth'\n        },\n        {\n            value: 'bitcoin',\n            label: 'Bitcoin',\n            vsCurrency: 'btc'\n        }\n    ];\n\n    //portfolio page\n    @observable transactionFrom = 'ethereum';\n    @observable transactionTo = 'dollars';\n    @observable transactionCoefficient = 1;\n    @observable maxFrom = '';\n\n    @action transaction = (value) => {\n        console.log('transaction', value, typeof value);\n        let k = this.transactionCoefficient;\n        this.userCoins.forEach((coin) => {\n            if (coin.name.toLowerCase() === this.transactionFrom) {\n                if (value > 1) {\n                    coin.count = +((coin.count - +value).toFixed(2));\n                } else {\n                    coin.count = +((coin.count - +value).toPrecision(4));\n                }\n            }\n            if (coin.name.toLowerCase() === this.transactionTo) {\n                if (value > 1) {\n                    coin.count = +((coin.count + +value * +k).toFixed(2));\n                } else {\n                    coin.count = +((coin.count + +value * +k).toPrecision(4));\n                }\n            }\n        });\n        if (this.transactionTo !== this.transactionFrom) {\n            this.maxFrom = this.maxFrom - value;\n        }\n        this.solveValues();\n    };\n\n    @action setTransactionFrom = (coin) => {\n        this.transactionFrom = coin;\n        this.solveTransactionCoefficient(coin, this.transactionTo);\n        console.log('from', coin, this.coinsData[coin].usdCost);\n        this.userCoins.forEach(({name, count}) => {\n            if (name.toLowerCase() === coin) {\n                this.maxFrom = count;\n                console.log('here');\n            }\n        })\n    };\n\n    @action solveTransactionCoefficient = (from, to) => {\n        console.log('from', from, 'to', to, this.coinsData);\n        this.transactionCoefficient = this.coinsData[from].usdCost / this.coinsData[to].usdCost\n    };\n\n    @action setTransactionTo = (coin) => {\n        this.transactionTo = coin;\n        this.solveTransactionCoefficient(this.transactionFrom, coin);\n        console.log('from', coin);\n    };\n\n    @observable userCoins = [\n        {name: 'Bitcoin', count: 1, value: 1},\n        {name: 'Dollars', count: 10000, value: 1},\n        {name: 'Ethereum', count: 10, value: 1},\n    ];\n\n    @observable coinsBase = 'dollars';\n    @observable coinsSum = '';\n\n    @action fetchAllCoins = async () => {\n        for (let item of this.valuesArr) {\n            let coin = item.value;\n            if (!this.coinsData[coin]) {\n                await this.fetchCoin(coin)\n            }\n        }\n        this.setTransactionFrom(this.transactionFrom);\n        this.solveValues();\n    };\n\n    @action solveValues = () => {\n        console.log('solve');\n        let sum = 0;\n        this.userCoins.forEach((item) => {\n            console.log('from', item.name, 'to', this.coinsBase, this.coinsData);\n            let coefficient = this.coinsData[item.name.toLowerCase()].usdCost / this.coinsData[this.coinsBase].usdCost;\n            item.value = item.count * coefficient;\n            sum += item.value;\n        });\n        if (sum > 10) {\n            this.coinsSum = sum.toFixed(2);\n        } else {\n            this.coinsSum = sum.toPrecision(4);\n        }\n    };\n\n    @action setCoinsBase = (coin) => {\n        this.coinsBase = coin;\n        this.solveValues();\n    };\n\n    //converter page\n    @observable coinFrom = 'ethereum';\n    @observable coinTo = 'dollars';\n    @observable coinsCoefficient = 1;\n    @observable coinsData = {};\n\n    @action setCoinFrom = async (coin) => {\n        if (!this.coinsData[coin]) {\n            await this.fetchCoin(coin);\n        }\n        this.solveCoinsCoefficient(coin, this.coinTo);\n        this.coinFrom = coin;\n    };\n\n    @action solveCoinsCoefficient = (from, to) => {\n        console.log('from', from, 'to', to, this.coinsData);\n        this.coinsCoefficient = this.coinsData[from].usdCost / this.coinsData[to].usdCost\n    };\n\n    @action setCoinTo = async (coin) => {\n        if (!this.coinsData[coin]) {\n            await this.fetchCoin(coin);\n        }\n        this.solveCoinsCoefficient(this.coinFrom, coin);\n        this.coinTo = coin;\n    };\n\n    @action fetchCoin = async (coin) => {\n        if (coin !== 'dollars')\n            try {\n                let response = await fetch(`https://api.coingecko.com/api/v3/coins/${coin}`);\n                if (response.ok) {\n                    let json = await response.json();\n                    console.log(json['market_data']['current_price'].usd);\n                    let s = {usdCost: json['market_data']['current_price'].usd, ...json};\n                    this.coinsData[coin] = s;\n                    console.log('json', s);\n                } else {\n                    console.log('error');\n                }\n            } catch (e) {\n                console.log(e);\n                alert('Ошибка сети');\n            }\n        else {\n            this.coinsData[coin] = {usdCost: 1, name: 'Dollars'}\n        }\n    };\n\n    @action fetchCoins = async (from, to) => {\n        await this.fetchCoin(from);\n        await this.fetchCoin(to);\n        this.solveCoinsCoefficient(from, to);\n    };\n\n    @observable chartData = [];\n    @observable chartCoin = 'ethereum';\n    @observable chartVsCurrency = 'usd';\n\n    @action setChartCoin = (coin) => {\n        this.chartCoin = coin;\n        this.fetchChartData(coin, this.chartVsCurrency);\n    };\n\n    @action setChartVsCurrency = (vsCurrency) => {\n        this.chartVsCurrency = vsCurrency;\n        this.fetchChartData(this.chartCoin, vsCurrency);\n    };\n\n    @action fetchChartData = async (coin, vsCurrency) => {\n        try {\n            let response = await fetch(`https://api.coingecko.com/api/v3/coins/${coin}/market_chart?vs_currency=${vsCurrency}&days=14&interval=daily`)\n            let usdArr;\n            if (coin === 'dollars') {\n                let response = await fetch(`https://api.coingecko.com/api/v3/coins/${coin}/market_chart?vs_currency=usd&days=14&interval=daily`)\n                if (response.ok) {\n                    let json = await response.json();\n                    usdArr = json.prices;\n                    console.log('json', json,);\n                } else {\n                    console.log('error');\n                }\n            }\n            if (response.ok) {\n                let json = await response.json();\n                if (coin === 'dollars') {\n                    console.log('here');\n                    json.prices = json.prices.map((item, index) => {\n                        return [item[0], item[1] / usdArr[index][1]]\n                    })\n                }\n                this.chartData = json.prices;\n                console.log('json', json, 'this.data', this.chartData);\n            } else {\n                console.log('error');\n            }\n        } catch (e) {\n            console.log(e);\n            alert('Ошибка сети')\n        }\n    }\n}\n\nconst store = new Store();\n\nexport {store};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"mobx-react\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}